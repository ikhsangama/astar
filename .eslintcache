[{"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\index.js":"1","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\App.js":"2","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\reportWebVitals.js":"3","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\services\\quizServices.js":"4","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\index.js":"5","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\QuizPage.jsx":"6","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\index.js":"7","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DragAndDropComponent.jsx":"8","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\AnswerButtonComponent.jsx":"9","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizDraggableComponent.jsx":"10","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizSingleCorrectComponent.jsx":"11","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\ScoreBannerComponent.jsx":"12","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\CountingImageComponent.jsx":"13","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizMultipleCorrectComponent.jsx":"14"},{"size":684,"mtime":1606897992028,"results":"15","hashOfConfig":"16"},{"size":220,"mtime":1606911828608,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2751,"mtime":1606930335435,"results":"19","hashOfConfig":"16"},{"size":48,"mtime":1606897992029,"results":"20","hashOfConfig":"16"},{"size":4063,"mtime":1606967798440,"results":"21","hashOfConfig":"16"},{"size":650,"mtime":1606926846140,"results":"22","hashOfConfig":"16"},{"size":577,"mtime":1606910606453,"results":"23","hashOfConfig":"16"},{"size":264,"mtime":1606909203703,"results":"24","hashOfConfig":"16"},{"size":2312,"mtime":1606921084031,"results":"25","hashOfConfig":"16"},{"size":755,"mtime":1606930993069,"results":"26","hashOfConfig":"16"},{"size":0,"mtime":1606918884865,"results":"27","hashOfConfig":"16"},{"size":879,"mtime":1606928231379,"results":"28","hashOfConfig":"16"},{"size":1420,"mtime":1606967434735,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0unw1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\App.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\reportWebVitals.js",[],["64","65"],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\services\\quizServices.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\QuizPage.jsx",["66","67","68"],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DragAndDropComponent.jsx",["69","70"],"// functionality\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default function DragAndDropComponent({ asset, index }) {\r\n  return (\r\n    <Draggable draggableId={`asset-${index}`} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          className=\"ImageContainer\"\r\n        >\r\n          <img src={asset.image} alt={asset.image} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\AnswerButtonComponent.jsx",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizDraggableComponent.jsx",["71","72","73"],"import React, { useState } from \"react\";\r\nimport { Stack, Text } from \"@chakra-ui/react\";\r\n//\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { DragAndDropComponent } from \"./index\";\r\n//\r\n\r\nexport default function DraggableQuizComponent({ quiz, setYourAnswer }) {\r\n  const [unorderImages, setUnorderImages] = useState(quiz.answer.assets);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    // console.log({ source, destination, draggableId });\r\n    // exit if it's out of the draggable area\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    // exit if it's same position\r\n    if (\r\n      destination.droppableId == source.droppableId &&\r\n      destination.index == source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // copying\r\n    const copyUnorderImages = Array.from(unorderImages);\r\n    // splice and insert to destination index\r\n    copyUnorderImages.splice(source.index, 1);\r\n    copyUnorderImages.splice(destination.index, 0, unorderImages[source.index]);\r\n    // update state\r\n    setUnorderImages(copyUnorderImages);\r\n    const answer = getAnswer(copyUnorderImages);\r\n    // set the answer\r\n    setYourAnswer(answer);\r\n  };\r\n\r\n  /**\r\n   * get answer after drag and drop\r\n   * @param {Array} answerImages\r\n   */\r\n  const getAnswer = (answerImages) => {\r\n    let answerList = answerImages.map((image) => image.value);\r\n    return answerList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing=\"10\" align=\"center\">\r\n        <Text fontSize=\"xl\">{quiz.question.text}</Text>\r\n        <div>\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {unorderImages.map((asset, index) => {\r\n                    return (\r\n                      <DragAndDropComponent\r\n                        asset={asset}\r\n                        index={index}\r\n                        key={index}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizSingleCorrectComponent.jsx",["74","75","76"],"import React, { useState } from \"react\";\r\nimport { Stack, Text, Box, RadioGroup, Radio } from \"@chakra-ui/react\";\r\n// import \"./QuizSingleCorrectComponent.css\";\r\n\r\nexport default function SingleCorrectQuizComponent({ quiz, setYourAnswer }) {\r\n  // if they dont have assets image, no need to use quizImage\r\n  // const [quizImage, setQuizImage] = useState(quiz.assets?.image);\r\n  const onAnswer = (event) => {\r\n    setYourAnswer(event);\r\n  };\r\n  return (\r\n    <>\r\n      <Stack spacing=\"10\" align=\"center\">\r\n        <RadioGroup onChange={(e) => onAnswer(e)}>\r\n          <Stack direction=\"row\">\r\n            <Radio value=\"yes\">Yes</Radio>\r\n            <Radio value=\"no\">No</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\ScoreBannerComponent.jsx",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\CountingImageComponent.jsx",["77","78"],"import React, { useState } from \"react\";\r\n\r\nexport default function CountingImageComponent({ quiz }) {\r\n  // if they dont have assets image, no need to use quizImage\r\n  console.log(quiz.question.count, \"<> quiz\");\r\n  const [quizImage, setQuizImage] = useState(quiz.question.assets);\r\n  return (\r\n    <>\r\n      {\r\n        // if there's an image in quiz, do render\r\n        quiz.question.count && (\r\n          <div>\r\n            {[...Array(quiz.question.count)].map((e, index) => {\r\n              return (\r\n                <img\r\n                  src={quizImage}\r\n                  key={index}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    maxWidth: \"60px\",\r\n                    maxHeight: \"60px\",\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuizMultipleCorrectComponent.jsx",["79","80"],"import React, { useState } from \"react\";\r\nimport { SimpleGrid, Box, Image, Checkbox } from \"@chakra-ui/react\";\r\n\r\nexport default function QuizMultipleCorrectComponent({ quiz, setYourAnswer }) {\r\n  const [currentAnswer, setCurrentAnswer] = useState(\r\n    quiz.answer.assets.map((asset) => {\r\n      let object = {};\r\n      object.value = asset.value;\r\n      object.isChecked = false;\r\n      return object;\r\n    })\r\n  );\r\n  /**\r\n   * update yourAnswer state from checkbox\r\n   * @param {*} event\r\n   */\r\n  const handleCheck = (event) => {\r\n    const copyCurrentAnswer = Array.from(currentAnswer);\r\n    copyCurrentAnswer.forEach((el) => {\r\n      if (el.value == [event.target.value]) {\r\n        el.isChecked = event.target.checked;\r\n      }\r\n    });\r\n    let answer = copyCurrentAnswer.flatMap((element) => {\r\n      if (element.isChecked) return element.value;\r\n      return [];\r\n    });\r\n    setYourAnswer(answer);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(quiz)} */}\r\n      <SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\r\n        {quiz.answer.assets.map((asset) => (\r\n          <Checkbox\r\n            key={asset.value}\r\n            value={asset.value}\r\n            onClick={(e) => handleCheck(e)}\r\n          >\r\n            <Box bg=\"\" maxH=\"120px\" maxW=\"120px\">\r\n              <Image src={asset.image} />\r\n            </Box>\r\n          </Checkbox>\r\n        ))}\r\n      </SimpleGrid>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":11,"column":21,"nodeType":"87","messageId":"88","endLine":11,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":34,"column":6,"nodeType":"91","endLine":34,"endColumn":14,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":39,"column":6,"nodeType":"91","endLine":39,"endColumn":18,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":25},{"ruleId":"85","severity":1,"message":"96","line":3,"column":27,"nodeType":"87","messageId":"88","endLine":3,"endColumn":36},{"ruleId":"85","severity":1,"message":"97","line":12,"column":34,"nodeType":"87","messageId":"88","endLine":12,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":20,"column":31,"nodeType":"100","messageId":"101","endLine":20,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":21,"column":25,"nodeType":"100","messageId":"101","endLine":21,"endColumn":27},{"ruleId":"85","severity":1,"message":"102","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"103","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":21},{"ruleId":"85","severity":1,"message":"104","line":2,"column":23,"nodeType":"87","messageId":"88","endLine":2,"endColumn":26},{"ruleId":"85","severity":1,"message":"105","line":6,"column":21,"nodeType":"87","messageId":"88","endLine":6,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":15,"column":17,"nodeType":"108","endLine":23,"endColumn":19},{"ruleId":"85","severity":1,"message":"109","line":5,"column":25,"nodeType":"87","messageId":"88","endLine":5,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":20,"column":20,"nodeType":"100","messageId":"101","endLine":20,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Center' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quizNumber'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setQuiz' needs the current value of 'quizNumber'.","ArrayExpression",["112"],"React Hook useEffect has a missing dependency: 'quizes'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setQuiz' needs the current value of 'quizes'.",["113"],"'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'draggableId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Text' is defined but never used.","'Box' is defined but never used.","'setQuizImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setCurrentAnswer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [quizNumber, quizes]",{"range":"117","text":"118"},{"range":"119","text":"118"},[969,977],"[quizNumber, quizes]",[1101,1113]]