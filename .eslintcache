[{"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\index.js":"1","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\App.js":"2","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\reportWebVitals.js":"3","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\services\\quizServices.js":"4","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\index.js":"5","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\QuizPage.jsx":"6","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\index.js":"7","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuestionComponent.jsx":"8","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DraggableQuizComponent.jsx":"9","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DragAndDropComponent.jsx":"10","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\AnswerButtonComponent.jsx":"11"},{"size":684,"mtime":1606897992028,"results":"12","hashOfConfig":"13"},{"size":220,"mtime":1606897992026,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1497,"mtime":1606897992030,"results":"16","hashOfConfig":"13"},{"size":48,"mtime":1606897992029,"results":"17","hashOfConfig":"13"},{"size":2062,"mtime":1606897992029,"results":"18","hashOfConfig":"13"},{"size":294,"mtime":1606897992028,"results":"19","hashOfConfig":"13"},{"size":213,"mtime":1606897992027,"results":"20","hashOfConfig":"13"},{"size":2245,"mtime":1606897992027,"results":"21","hashOfConfig":"13"},{"size":735,"mtime":1606897992027,"results":"22","hashOfConfig":"13"},{"size":229,"mtime":1606897992026,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0unw1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\App.js",["51"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["52","53"],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\reportWebVitals.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\services\\quizServices.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\pages\\QuizPage.jsx",["54","55","56","57","58"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AnswerButtonComponent,\r\n  DraggableQuizComponent,\r\n  QuestionComponent,\r\n} from \"../components\";\r\n//\r\nimport { fetchQuizes } from \"../services/quizServices\";\r\n\r\nexport default function QuizPage() {\r\n  const [quizes, setQuizes] = useState();\r\n  const [quiz, setQuiz] = useState();\r\n  const [yourAnswer, setYourAnswer] = useState();\r\n  const [score, setScore] = useState();\r\n\r\n  useEffect(() => {\r\n    let getQuizesFromServices = fetchQuizes();\r\n    let getRandomQuizOrder = shuffle(getQuizesFromServices);\r\n    setQuizes(getRandomQuizOrder);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (quizes) {\r\n      setQuiz(quizes[0]);\r\n    }\r\n  }, [quizes]);\r\n\r\n  /**\r\n   *\r\n   * @param {Array} array\r\n   * return shuffled array\r\n   */\r\n  function shuffle(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} quizType\r\n   * return quiz component based on quiz type\r\n   */\r\n  const renderByQuizType = (quizType) => {\r\n    switch (quizType) {\r\n      case \"draggable\":\r\n        return (\r\n          <>\r\n            <DraggableQuizComponent quiz={quiz} setYourAnswer={setYourAnswer} />\r\n          </>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onNext = () => {\r\n    // console.log(\"nextButton\");\r\n    // if()\r\n  };\r\n\r\n  // Quiz Page\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(quiz?.type)} */}\r\n      {/* <QuestionComponent question={quiz?.question} /> */}\r\n      {renderByQuizType(quiz?.type)}\r\n      <AnswerButtonComponent onNext={onNext} />\r\n    </>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\index.js",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\QuestionComponent.jsx",[],"D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DraggableQuizComponent.jsx",["59","60","61","62"],"import React, { useState } from \"react\";\r\n\r\n//\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport AnswerButtonComponent from \"./AnswerButtonComponent\";\r\nimport DragAndDropComponent from \"./DragAndDropComponent\";\r\n//\r\n\r\nexport default function DraggableQuizComponent({ quiz, setYourAnswer }) {\r\n  const [unorderImages, setUnorderImages] = useState(quiz.assets);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    // console.log({ source, destination, draggableId });\r\n    // exit if it's out of the draggable area\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    // exit if it's same position\r\n    if (\r\n      destination.droppableId == source.droppableId &&\r\n      destination.index == source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // copying\r\n    const copyUnorderImages = Array.from(unorderImages);\r\n    // splice and insert to destination index\r\n    copyUnorderImages.splice(source.index, 1);\r\n    copyUnorderImages.splice(destination.index, 0, unorderImages[source.index]);\r\n    // update state\r\n    setUnorderImages(copyUnorderImages);\r\n    const answer = getAnswer(copyUnorderImages);\r\n    // set the answer\r\n    setYourAnswer(answer);\r\n  };\r\n\r\n  /**\r\n   * get answer after drag and drop\r\n   * @param {Array} answerImages\r\n   */\r\n  const getAnswer = (answerImages) => {\r\n    let answerList = answerImages.map((image) => image.value);\r\n    return answerList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(quiz)} */}\r\n      <h1>{quiz.question}</h1>\r\n      <div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n            {(provided) => (\r\n              <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                {unorderImages.map((asset, index) => {\r\n                  return (\r\n                    <DragAndDropComponent\r\n                      asset={asset}\r\n                      index={index}\r\n                      key={index}\r\n                    />\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\DragAndDropComponent.jsx",["63","64"],"// functionality\r\nimport React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// css\r\nimport \"./DragAndDropComponent.css\";\r\n\r\nexport default function DragAndDropComponent({ asset, index }) {\r\n  return (\r\n    // <div className=\"ImageContainer\">\r\n    <Draggable draggableId={`asset-${index}`} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          // innerRef={provided.innerRef}\r\n          ref={provided.innerRef}\r\n          className=\"ImageContainer\"\r\n        >\r\n          <img src={asset.image} alt={asset.image} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n    //{\" \"}\r\n    // </div>\r\n  );\r\n}\r\n","D:\\A\\11_November\\Career\\ASTAR\\astar-assignment\\src\\components\\AnswerButtonComponent.jsx",[],{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":5,"column":3,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"74","line":13,"column":10,"nodeType":"67","messageId":"68","endLine":13,"endColumn":20},{"ruleId":"65","severity":1,"message":"75","line":14,"column":10,"nodeType":"67","messageId":"68","endLine":14,"endColumn":15},{"ruleId":"65","severity":1,"message":"76","line":14,"column":17,"nodeType":"67","messageId":"68","endLine":14,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":66,"column":9,"nodeType":"79","messageId":"80","endLine":66,"endColumn":15},{"ruleId":"65","severity":1,"message":"81","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":29},{"ruleId":"65","severity":1,"message":"82","line":13,"column":34,"nodeType":"67","messageId":"68","endLine":13,"endColumn":45},{"ruleId":"83","severity":1,"message":"84","line":21,"column":31,"nodeType":"85","messageId":"86","endLine":21,"endColumn":33},{"ruleId":"83","severity":1,"message":"84","line":22,"column":25,"nodeType":"85","messageId":"86","endLine":22,"endColumn":27},{"ruleId":"65","severity":1,"message":"87","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":25},{"ruleId":"65","severity":1,"message":"88","line":3,"column":27,"nodeType":"67","messageId":"68","endLine":3,"endColumn":36},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'QuestionComponent' is defined but never used.","'yourAnswer' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'AnswerButtonComponent' is defined but never used.","'draggableId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","no-global-assign","no-unsafe-negation"]